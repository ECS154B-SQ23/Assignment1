;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Top : 
  module Control : 
    input clock : Clock
    input reset : Reset
    output io : {flip opcode : UInt<7>, aluop : UInt<3>, controltransferop : UInt<2>, memop : UInt<2>, op1_src : UInt<1>, op2_src : UInt<2>, writeback_valid : UInt<1>, writeback_src : UInt<2>, validinst : UInt<1>}
    
    node _T = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<6>("h033"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<6>("h03b"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = mux(_T_3, UInt<2>("h03"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node signals_0 = mux(_T_1, UInt<1>("h01"), _T_4) @[Lookup.scala 33:37]
    node _T_5 = mux(_T_3, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node signals_1 = mux(_T_1, UInt<1>("h00"), _T_5) @[Lookup.scala 33:37]
    node _T_6 = mux(_T_3, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node signals_2 = mux(_T_1, UInt<1>("h00"), _T_6) @[Lookup.scala 33:37]
    node _T_7 = mux(_T_3, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node signals_3 = mux(_T_1, UInt<1>("h00"), _T_7) @[Lookup.scala 33:37]
    node _T_8 = mux(_T_3, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node signals_4 = mux(_T_1, UInt<1>("h00"), _T_8) @[Lookup.scala 33:37]
    node _T_9 = mux(_T_3, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node signals_5 = mux(_T_1, UInt<1>("h01"), _T_9) @[Lookup.scala 33:37]
    node _T_10 = mux(_T_3, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node signals_6 = mux(_T_1, UInt<1>("h00"), _T_10) @[Lookup.scala 33:37]
    node _T_11 = mux(_T_3, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node signals_7 = mux(_T_1, UInt<1>("h01"), _T_11) @[Lookup.scala 33:37]
    io.aluop <= signals_0 @[control.scala 72:24]
    io.controltransferop <= signals_1 @[control.scala 73:24]
    io.memop <= signals_2 @[control.scala 74:24]
    io.op1_src <= signals_3 @[control.scala 75:24]
    io.op2_src <= signals_4 @[control.scala 76:24]
    io.writeback_valid <= signals_5 @[control.scala 77:24]
    io.writeback_src <= signals_6 @[control.scala 78:24]
    io.validinst <= signals_7 @[control.scala 79:24]
    
  module RegisterFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip readreg1 : UInt<5>, flip readreg2 : UInt<5>, flip writereg : UInt<5>, flip writedata : UInt<64>, flip wen : UInt<1>, readdata1 : UInt<64>, readdata2 : UInt<64>}
    
    reg regs : UInt<64>[32], clock @[register-file.scala 53:17]
    when io.wen : @[register-file.scala 56:17]
      regs[io.writereg] <= io.writedata @[register-file.scala 57:23]
      skip @[register-file.scala 56:17]
    io.readdata1 <= regs[io.readreg1] @[register-file.scala 62:16]
    io.readdata2 <= regs[io.readreg2] @[register-file.scala 63:16]
    
  module ALUControl : 
    input clock : Clock
    input reset : Reset
    output io : {flip aluop : UInt<3>, flip funct7 : UInt<7>, flip funct3 : UInt<3>, operation : UInt<5>}
    
    io.operation <= UInt<5>("h01f") @[alucontrol.scala 35:16]
    node _T = eq(io.aluop, UInt<1>("h01")) @[alucontrol.scala 37:18]
    when _T : @[alucontrol.scala 37:27]
      node _T_1 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 41:21]
      node _T_2 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 41:48]
      node _T_3 = and(_T_1, _T_2) @[alucontrol.scala 41:35]
      node _T_4 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 42:21]
      node _T_5 = eq(io.funct7, UInt<6>("h020")) @[alucontrol.scala 42:48]
      node _T_6 = and(_T_4, _T_5) @[alucontrol.scala 42:35]
      node _T_7 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 43:21]
      node _T_8 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 43:48]
      node _T_9 = and(_T_7, _T_8) @[alucontrol.scala 43:35]
      node _T_10 = eq(io.funct3, UInt<1>("h01")) @[alucontrol.scala 44:21]
      node _T_11 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 44:48]
      node _T_12 = and(_T_10, _T_11) @[alucontrol.scala 44:35]
      node _T_13 = eq(io.funct3, UInt<1>("h01")) @[alucontrol.scala 45:21]
      node _T_14 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 45:48]
      node _T_15 = and(_T_13, _T_14) @[alucontrol.scala 45:35]
      node _T_16 = eq(io.funct3, UInt<2>("h02")) @[alucontrol.scala 46:21]
      node _T_17 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 46:48]
      node _T_18 = and(_T_16, _T_17) @[alucontrol.scala 46:35]
      node _T_19 = eq(io.funct3, UInt<2>("h02")) @[alucontrol.scala 47:21]
      node _T_20 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 47:48]
      node _T_21 = and(_T_19, _T_20) @[alucontrol.scala 47:35]
      node _T_22 = eq(io.funct3, UInt<2>("h03")) @[alucontrol.scala 48:21]
      node _T_23 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 48:48]
      node _T_24 = and(_T_22, _T_23) @[alucontrol.scala 48:35]
      node _T_25 = eq(io.funct3, UInt<2>("h03")) @[alucontrol.scala 49:21]
      node _T_26 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 49:48]
      node _T_27 = and(_T_25, _T_26) @[alucontrol.scala 49:35]
      node _T_28 = eq(io.funct3, UInt<3>("h04")) @[alucontrol.scala 50:21]
      node _T_29 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 50:48]
      node _T_30 = and(_T_28, _T_29) @[alucontrol.scala 50:35]
      node _T_31 = eq(io.funct3, UInt<3>("h04")) @[alucontrol.scala 51:21]
      node _T_32 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 51:48]
      node _T_33 = and(_T_31, _T_32) @[alucontrol.scala 51:35]
      node _T_34 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 52:21]
      node _T_35 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 52:48]
      node _T_36 = and(_T_34, _T_35) @[alucontrol.scala 52:35]
      node _T_37 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 53:21]
      node _T_38 = eq(io.funct7, UInt<6>("h020")) @[alucontrol.scala 53:48]
      node _T_39 = and(_T_37, _T_38) @[alucontrol.scala 53:35]
      node _T_40 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 54:21]
      node _T_41 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 54:48]
      node _T_42 = and(_T_40, _T_41) @[alucontrol.scala 54:35]
      node _T_43 = eq(io.funct3, UInt<3>("h06")) @[alucontrol.scala 55:21]
      node _T_44 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 55:48]
      node _T_45 = and(_T_43, _T_44) @[alucontrol.scala 55:35]
      node _T_46 = eq(io.funct3, UInt<3>("h06")) @[alucontrol.scala 56:21]
      node _T_47 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 56:48]
      node _T_48 = and(_T_46, _T_47) @[alucontrol.scala 56:35]
      node _T_49 = eq(io.funct3, UInt<3>("h07")) @[alucontrol.scala 57:21]
      node _T_50 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 57:48]
      node _T_51 = and(_T_49, _T_50) @[alucontrol.scala 57:35]
      node _T_52 = eq(io.funct3, UInt<3>("h07")) @[alucontrol.scala 58:21]
      node _T_53 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 58:48]
      node _T_54 = and(_T_52, _T_53) @[alucontrol.scala 58:35]
      node _T_55 = mux(_T_54, UInt<5>("h019"), UInt<5>("h01f")) @[Mux.scala 87:16]
      node _T_56 = mux(_T_51, UInt<1>("h00"), _T_55) @[Mux.scala 87:16]
      node _T_57 = mux(_T_48, UInt<5>("h018"), _T_56) @[Mux.scala 87:16]
      node _T_58 = mux(_T_45, UInt<1>("h01"), _T_57) @[Mux.scala 87:16]
      node _T_59 = mux(_T_42, UInt<5>("h015"), _T_58) @[Mux.scala 87:16]
      node _T_60 = mux(_T_39, UInt<3>("h04"), _T_59) @[Mux.scala 87:16]
      node _T_61 = mux(_T_36, UInt<4>("h08"), _T_60) @[Mux.scala 87:16]
      node _T_62 = mux(_T_33, UInt<5>("h014"), _T_61) @[Mux.scala 87:16]
      node _T_63 = mux(_T_30, UInt<2>("h02"), _T_62) @[Mux.scala 87:16]
      node _T_64 = mux(_T_27, UInt<5>("h013"), _T_63) @[Mux.scala 87:16]
      node _T_65 = mux(_T_24, UInt<4>("h0b"), _T_64) @[Mux.scala 87:16]
      node _T_66 = mux(_T_21, UInt<5>("h01c"), _T_65) @[Mux.scala 87:16]
      node _T_67 = mux(_T_18, UInt<4>("h0a"), _T_66) @[Mux.scala 87:16]
      node _T_68 = mux(_T_15, UInt<5>("h012"), _T_67) @[Mux.scala 87:16]
      node _T_69 = mux(_T_12, UInt<3>("h06"), _T_68) @[Mux.scala 87:16]
      node _T_70 = mux(_T_9, UInt<5>("h010"), _T_69) @[Mux.scala 87:16]
      node _T_71 = mux(_T_6, UInt<4>("h0e"), _T_70) @[Mux.scala 87:16]
      node _T_72 = mux(_T_3, UInt<4>("h0c"), _T_71) @[Mux.scala 87:16]
      io.operation <= _T_72 @[alucontrol.scala 38:18]
      skip @[alucontrol.scala 37:27]
    else : @[alucontrol.scala 62:32]
      node _T_73 = eq(io.aluop, UInt<2>("h03")) @[alucontrol.scala 62:23]
      when _T_73 : @[alucontrol.scala 62:32]
        node _T_74 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 66:21]
        node _T_75 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 66:48]
        node _T_76 = and(_T_74, _T_75) @[alucontrol.scala 66:35]
        node _T_77 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 67:21]
        node _T_78 = eq(io.funct7, UInt<6>("h020")) @[alucontrol.scala 67:48]
        node _T_79 = and(_T_77, _T_78) @[alucontrol.scala 67:35]
        node _T_80 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 68:21]
        node _T_81 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 68:48]
        node _T_82 = and(_T_80, _T_81) @[alucontrol.scala 68:35]
        node _T_83 = eq(io.funct3, UInt<1>("h01")) @[alucontrol.scala 69:21]
        node _T_84 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 69:48]
        node _T_85 = and(_T_83, _T_84) @[alucontrol.scala 69:35]
        node _T_86 = eq(io.funct3, UInt<3>("h04")) @[alucontrol.scala 70:21]
        node _T_87 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 70:48]
        node _T_88 = and(_T_86, _T_87) @[alucontrol.scala 70:35]
        node _T_89 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 71:21]
        node _T_90 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 71:48]
        node _T_91 = and(_T_89, _T_90) @[alucontrol.scala 71:35]
        node _T_92 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 72:21]
        node _T_93 = eq(io.funct7, UInt<6>("h020")) @[alucontrol.scala 72:48]
        node _T_94 = and(_T_92, _T_93) @[alucontrol.scala 72:35]
        node _T_95 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 73:21]
        node _T_96 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 73:48]
        node _T_97 = and(_T_95, _T_96) @[alucontrol.scala 73:35]
        node _T_98 = eq(io.funct3, UInt<3>("h06")) @[alucontrol.scala 74:21]
        node _T_99 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 74:48]
        node _T_100 = and(_T_98, _T_99) @[alucontrol.scala 74:35]
        node _T_101 = eq(io.funct3, UInt<3>("h07")) @[alucontrol.scala 75:21]
        node _T_102 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 75:48]
        node _T_103 = and(_T_101, _T_102) @[alucontrol.scala 75:35]
        node _T_104 = mux(_T_103, UInt<5>("h01b"), UInt<5>("h01f")) @[Mux.scala 87:16]
        node _T_105 = mux(_T_100, UInt<5>("h01a"), _T_104) @[Mux.scala 87:16]
        node _T_106 = mux(_T_97, UInt<5>("h017"), _T_105) @[Mux.scala 87:16]
        node _T_107 = mux(_T_94, UInt<3>("h05"), _T_106) @[Mux.scala 87:16]
        node _T_108 = mux(_T_91, UInt<4>("h09"), _T_107) @[Mux.scala 87:16]
        node _T_109 = mux(_T_88, UInt<5>("h016"), _T_108) @[Mux.scala 87:16]
        node _T_110 = mux(_T_85, UInt<3>("h07"), _T_109) @[Mux.scala 87:16]
        node _T_111 = mux(_T_82, UInt<5>("h011"), _T_110) @[Mux.scala 87:16]
        node _T_112 = mux(_T_79, UInt<4>("h0f"), _T_111) @[Mux.scala 87:16]
        node _T_113 = mux(_T_76, UInt<4>("h0d"), _T_112) @[Mux.scala 87:16]
        io.operation <= _T_113 @[alucontrol.scala 63:18]
        skip @[alucontrol.scala 62:32]
    
  module ALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip operation : UInt<5>, flip operand1 : UInt<64>, flip operand2 : UInt<64>, result : UInt<64>}
    
    node operand1_32 = bits(io.operand1, 31, 0) @[alu.scala 47:32]
    node operand2_32 = bits(io.operand2, 31, 0) @[alu.scala 48:32]
    io.result <= UInt<1>("h00") @[alu.scala 50:13]
    node _T = eq(io.operation, UInt<1>("h00")) @[alu.scala 52:22]
    when _T : @[alu.scala 52:38]
      node _T_1 = and(io.operand1, io.operand2) @[alu.scala 53:30]
      io.result <= _T_1 @[alu.scala 53:15]
      skip @[alu.scala 52:38]
    else : @[alu.scala 55:43]
      node _T_2 = eq(io.operation, UInt<1>("h01")) @[alu.scala 55:27]
      when _T_2 : @[alu.scala 55:43]
        node _T_3 = or(io.operand1, io.operand2) @[alu.scala 56:30]
        io.result <= _T_3 @[alu.scala 56:15]
        skip @[alu.scala 55:43]
      else : @[alu.scala 58:43]
        node _T_4 = eq(io.operation, UInt<2>("h02")) @[alu.scala 58:27]
        when _T_4 : @[alu.scala 58:43]
          node _T_5 = xor(io.operand1, io.operand2) @[alu.scala 59:30]
          io.result <= _T_5 @[alu.scala 59:15]
          skip @[alu.scala 58:43]
        else : @[alu.scala 61:43]
          node _T_6 = eq(io.operation, UInt<3>("h04")) @[alu.scala 61:27]
          when _T_6 : @[alu.scala 61:43]
            node _T_7 = asSInt(io.operand1) @[alu.scala 62:31]
            node _T_8 = bits(io.operand2, 5, 0) @[alu.scala 62:52]
            node _T_9 = dshr(_T_7, _T_8) @[alu.scala 62:38]
            node _T_10 = asUInt(_T_9) @[alu.scala 62:60]
            io.result <= _T_10 @[alu.scala 62:15]
            skip @[alu.scala 61:43]
          else : @[alu.scala 64:43]
            node _T_11 = eq(io.operation, UInt<3>("h05")) @[alu.scala 64:27]
            when _T_11 : @[alu.scala 64:43]
              node _T_12 = asSInt(operand1_32) @[alu.scala 65:48]
              node _T_13 = bits(operand2_32, 4, 0) @[alu.scala 65:69]
              node _T_14 = dshr(_T_12, _T_13) @[alu.scala 65:55]
              node _T_15 = asUInt(_T_14) @[alu.scala 65:77]
              node _T_16 = bits(_T_15, 31, 31) @[alu.scala 46:61]
              node _T_17 = bits(_T_16, 0, 0) @[Bitwise.scala 72:15]
              node _T_18 = mux(_T_17, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
              node _T_19 = bits(_T_15, 31, 0) @[alu.scala 46:73]
              node _T_20 = cat(_T_18, _T_19) @[Cat.scala 30:58]
              io.result <= _T_20 @[alu.scala 65:15]
              skip @[alu.scala 64:43]
            else : @[alu.scala 68:43]
              node _T_21 = eq(io.operation, UInt<3>("h06")) @[alu.scala 68:27]
              when _T_21 : @[alu.scala 68:43]
                node _T_22 = bits(io.operand2, 5, 0) @[alu.scala 69:44]
                node _T_23 = dshl(io.operand1, _T_22) @[alu.scala 69:30]
                io.result <= _T_23 @[alu.scala 69:15]
                skip @[alu.scala 68:43]
              else : @[alu.scala 71:43]
                node _T_24 = eq(io.operation, UInt<3>("h07")) @[alu.scala 71:27]
                when _T_24 : @[alu.scala 71:43]
                  node _T_25 = bits(operand2_32, 4, 0) @[alu.scala 72:61]
                  node _T_26 = dshl(operand1_32, _T_25) @[alu.scala 72:47]
                  node _T_27 = bits(_T_26, 31, 31) @[alu.scala 46:61]
                  node _T_28 = bits(_T_27, 0, 0) @[Bitwise.scala 72:15]
                  node _T_29 = mux(_T_28, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                  node _T_30 = bits(_T_26, 31, 0) @[alu.scala 46:73]
                  node _T_31 = cat(_T_29, _T_30) @[Cat.scala 30:58]
                  io.result <= _T_31 @[alu.scala 72:15]
                  skip @[alu.scala 71:43]
                else : @[alu.scala 74:43]
                  node _T_32 = eq(io.operation, UInt<4>("h08")) @[alu.scala 74:27]
                  when _T_32 : @[alu.scala 74:43]
                    node _T_33 = bits(io.operand2, 5, 0) @[alu.scala 75:44]
                    node _T_34 = dshr(io.operand1, _T_33) @[alu.scala 75:30]
                    io.result <= _T_34 @[alu.scala 75:15]
                    skip @[alu.scala 74:43]
                  else : @[alu.scala 77:43]
                    node _T_35 = eq(io.operation, UInt<4>("h09")) @[alu.scala 77:27]
                    when _T_35 : @[alu.scala 77:43]
                      node _T_36 = bits(operand2_32, 4, 0) @[alu.scala 78:61]
                      node _T_37 = dshr(operand1_32, _T_36) @[alu.scala 78:47]
                      node _T_38 = bits(_T_37, 31, 31) @[alu.scala 46:61]
                      node _T_39 = bits(_T_38, 0, 0) @[Bitwise.scala 72:15]
                      node _T_40 = mux(_T_39, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                      node _T_41 = bits(_T_37, 31, 0) @[alu.scala 46:73]
                      node _T_42 = cat(_T_40, _T_41) @[Cat.scala 30:58]
                      io.result <= _T_42 @[alu.scala 78:15]
                      skip @[alu.scala 77:43]
                    else : @[alu.scala 80:43]
                      node _T_43 = eq(io.operation, UInt<4>("h0a")) @[alu.scala 80:27]
                      when _T_43 : @[alu.scala 80:43]
                        node _T_44 = asSInt(io.operand1) @[alu.scala 81:31]
                        node _T_45 = asSInt(io.operand2) @[alu.scala 81:52]
                        node _T_46 = lt(_T_44, _T_45) @[alu.scala 81:38]
                        io.result <= _T_46 @[alu.scala 81:15]
                        skip @[alu.scala 80:43]
                      else : @[alu.scala 83:43]
                        node _T_47 = eq(io.operation, UInt<4>("h0b")) @[alu.scala 83:27]
                        when _T_47 : @[alu.scala 83:43]
                          node _T_48 = lt(io.operand1, io.operand2) @[alu.scala 84:38]
                          io.result <= _T_48 @[alu.scala 84:15]
                          skip @[alu.scala 83:43]
                        else : @[alu.scala 86:43]
                          node _T_49 = eq(io.operation, UInt<4>("h0c")) @[alu.scala 86:27]
                          when _T_49 : @[alu.scala 86:43]
                            node _T_50 = add(io.operand1, io.operand2) @[alu.scala 87:30]
                            node _T_51 = tail(_T_50, 1) @[alu.scala 87:30]
                            io.result <= _T_51 @[alu.scala 87:15]
                            skip @[alu.scala 86:43]
                          else : @[alu.scala 89:43]
                            node _T_52 = eq(io.operation, UInt<4>("h0d")) @[alu.scala 89:27]
                            when _T_52 : @[alu.scala 89:43]
                              node _T_53 = add(operand1_32, operand2_32) @[alu.scala 90:47]
                              node _T_54 = tail(_T_53, 1) @[alu.scala 90:47]
                              node _T_55 = bits(_T_54, 31, 31) @[alu.scala 46:61]
                              node _T_56 = bits(_T_55, 0, 0) @[Bitwise.scala 72:15]
                              node _T_57 = mux(_T_56, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                              node _T_58 = bits(_T_54, 31, 0) @[alu.scala 46:73]
                              node _T_59 = cat(_T_57, _T_58) @[Cat.scala 30:58]
                              io.result <= _T_59 @[alu.scala 90:15]
                              skip @[alu.scala 89:43]
                            else : @[alu.scala 92:43]
                              node _T_60 = eq(io.operation, UInt<4>("h0e")) @[alu.scala 92:27]
                              when _T_60 : @[alu.scala 92:43]
                                node _T_61 = sub(io.operand1, io.operand2) @[alu.scala 93:30]
                                node _T_62 = tail(_T_61, 1) @[alu.scala 93:30]
                                io.result <= _T_62 @[alu.scala 93:15]
                                skip @[alu.scala 92:43]
                              else : @[alu.scala 95:43]
                                node _T_63 = eq(io.operation, UInt<4>("h0f")) @[alu.scala 95:27]
                                when _T_63 : @[alu.scala 95:43]
                                  node _T_64 = sub(operand1_32, operand2_32) @[alu.scala 96:47]
                                  node _T_65 = tail(_T_64, 1) @[alu.scala 96:47]
                                  node _T_66 = bits(_T_65, 31, 31) @[alu.scala 46:61]
                                  node _T_67 = bits(_T_66, 0, 0) @[Bitwise.scala 72:15]
                                  node _T_68 = mux(_T_67, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                  node _T_69 = bits(_T_65, 31, 0) @[alu.scala 46:73]
                                  node _T_70 = cat(_T_68, _T_69) @[Cat.scala 30:58]
                                  io.result <= _T_70 @[alu.scala 96:15]
                                  skip @[alu.scala 95:43]
                                else : @[alu.scala 98:43]
                                  node _T_71 = eq(io.operation, UInt<5>("h010")) @[alu.scala 98:27]
                                  when _T_71 : @[alu.scala 98:43]
                                    node _T_72 = mul(io.operand1, io.operand2) @[alu.scala 99:30]
                                    io.result <= _T_72 @[alu.scala 99:15]
                                    skip @[alu.scala 98:43]
                                  else : @[alu.scala 101:43]
                                    node _T_73 = eq(io.operation, UInt<5>("h011")) @[alu.scala 101:27]
                                    when _T_73 : @[alu.scala 101:43]
                                      wire _T_74 : SInt<32> @[alu.scala 102:26]
                                      node _T_75 = asSInt(operand1_32) @[alu.scala 103:31]
                                      node _T_76 = asSInt(operand2_32) @[alu.scala 103:52]
                                      node _T_77 = mul(_T_75, _T_76) @[alu.scala 103:38]
                                      _T_74 <= _T_77 @[alu.scala 103:16]
                                      node _T_78 = asUInt(_T_74) @[alu.scala 104:46]
                                      node _T_79 = bits(_T_78, 31, 31) @[alu.scala 46:61]
                                      node _T_80 = bits(_T_79, 0, 0) @[Bitwise.scala 72:15]
                                      node _T_81 = mux(_T_80, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                      node _T_82 = bits(_T_78, 31, 0) @[alu.scala 46:73]
                                      node _T_83 = cat(_T_81, _T_82) @[Cat.scala 30:58]
                                      io.result <= _T_83 @[alu.scala 104:15]
                                      skip @[alu.scala 101:43]
                                    else : @[alu.scala 106:43]
                                      node _T_84 = eq(io.operation, UInt<5>("h012")) @[alu.scala 106:27]
                                      when _T_84 : @[alu.scala 106:43]
                                        node _T_85 = eq(io.operand1, UInt<1>("h00")) @[alu.scala 108:24]
                                        node _T_86 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 108:49]
                                        node _T_87 = or(_T_85, _T_86) @[alu.scala 108:33]
                                        when _T_87 : @[alu.scala 108:59]
                                          io.result <= UInt<1>("h00") @[alu.scala 109:17]
                                          skip @[alu.scala 108:59]
                                        else : @[alu.scala 111:16]
                                          node _T_88 = asSInt(io.operand1) @[alu.scala 112:45]
                                          node _T_89 = lt(_T_88, asSInt(UInt<1>("h00"))) @[alu.scala 112:55]
                                          node _T_90 = sub(asSInt(UInt<1>("h00")), _T_88) @[alu.scala 112:55]
                                          node _T_91 = tail(_T_90, 1) @[alu.scala 112:55]
                                          node _T_92 = asSInt(_T_91) @[alu.scala 112:55]
                                          node _T_93 = mux(_T_89, _T_92, _T_88) @[alu.scala 112:55]
                                          node _T_94 = asUInt(_T_93) @[alu.scala 112:58]
                                          node _T_95 = asSInt(io.operand2) @[alu.scala 112:78]
                                          node _T_96 = lt(_T_95, asSInt(UInt<1>("h00"))) @[alu.scala 112:88]
                                          node _T_97 = sub(asSInt(UInt<1>("h00")), _T_95) @[alu.scala 112:88]
                                          node _T_98 = tail(_T_97, 1) @[alu.scala 112:88]
                                          node _T_99 = asSInt(_T_98) @[alu.scala 112:88]
                                          node _T_100 = mux(_T_96, _T_99, _T_95) @[alu.scala 112:88]
                                          node _T_101 = asUInt(_T_100) @[alu.scala 112:91]
                                          node _T_102 = bits(_T_94, 63, 32) @[alu.scala 32:16]
                                          node _T_103 = bits(_T_94, 31, 0) @[alu.scala 33:16]
                                          node _T_104 = bits(_T_101, 63, 32) @[alu.scala 34:16]
                                          node _T_105 = bits(_T_101, 31, 0) @[alu.scala 35:16]
                                          wire _T_106 : UInt<64> @[alu.scala 36:21]
                                          node _T_107 = mul(_T_102, _T_104) @[alu.scala 37:15]
                                          node _T_108 = mul(_T_102, _T_105) @[alu.scala 37:23]
                                          node _T_109 = shr(_T_108, 32) @[alu.scala 37:27]
                                          node _T_110 = add(_T_107, _T_109) @[alu.scala 37:18]
                                          node _T_111 = tail(_T_110, 1) @[alu.scala 37:18]
                                          node _T_112 = mul(_T_103, _T_104) @[alu.scala 37:39]
                                          node _T_113 = shr(_T_112, 32) @[alu.scala 37:43]
                                          node _T_114 = add(_T_111, _T_113) @[alu.scala 37:34]
                                          node _T_115 = tail(_T_114, 1) @[alu.scala 37:34]
                                          _T_106 <= _T_115 @[alu.scala 37:11]
                                          wire _T_116 : UInt<64> @[alu.scala 38:20]
                                          node _T_117 = mul(_T_102, _T_105) @[alu.scala 39:16]
                                          node _T_118 = shl(UInt<1>("h01"), 32) @[alu.scala 39:27]
                                          node _T_119 = rem(_T_117, _T_118) @[alu.scala 39:20]
                                          node _T_120 = mul(_T_103, _T_104) @[alu.scala 39:39]
                                          node _T_121 = shl(UInt<1>("h01"), 32) @[alu.scala 39:50]
                                          node _T_122 = rem(_T_120, _T_121) @[alu.scala 39:43]
                                          node _T_123 = add(_T_119, _T_122) @[alu.scala 39:35]
                                          node _T_124 = tail(_T_123, 1) @[alu.scala 39:35]
                                          node _T_125 = mul(_T_103, _T_105) @[alu.scala 39:62]
                                          node _T_126 = shr(_T_125, 32) @[alu.scala 39:66]
                                          node _T_127 = add(_T_124, _T_126) @[alu.scala 39:57]
                                          node _T_128 = tail(_T_127, 1) @[alu.scala 39:57]
                                          _T_116 <= _T_128 @[alu.scala 39:10]
                                          wire _T_129 : UInt<64> @[alu.scala 40:22]
                                          node _T_130 = shr(_T_116, 32) @[alu.scala 41:29]
                                          node _T_131 = add(_T_106, _T_130) @[alu.scala 41:21]
                                          node _T_132 = tail(_T_131, 1) @[alu.scala 41:21]
                                          _T_129 <= _T_132 @[alu.scala 41:12]
                                          node _T_133 = asSInt(io.operand1) @[alu.scala 113:27]
                                          node _T_134 = gt(_T_133, asSInt(UInt<1>("h00"))) @[alu.scala 113:34]
                                          node _T_135 = asSInt(io.operand2) @[alu.scala 113:57]
                                          node _T_136 = gt(_T_135, asSInt(UInt<1>("h00"))) @[alu.scala 113:64]
                                          node _T_137 = and(_T_134, _T_136) @[alu.scala 113:41]
                                          node _T_138 = asSInt(io.operand1) @[alu.scala 113:90]
                                          node _T_139 = leq(_T_138, asSInt(UInt<1>("h00"))) @[alu.scala 113:97]
                                          node _T_140 = asSInt(io.operand2) @[alu.scala 113:121]
                                          node _T_141 = leq(_T_140, asSInt(UInt<1>("h00"))) @[alu.scala 113:128]
                                          node _T_142 = and(_T_139, _T_141) @[alu.scala 113:105]
                                          node _T_143 = or(_T_137, _T_142) @[alu.scala 113:72]
                                          when _T_143 : @[alu.scala 113:139]
                                            io.result <= _T_129 @[alu.scala 114:19]
                                            skip @[alu.scala 113:139]
                                          else : @[alu.scala 116:18]
                                            node _T_144 = add(_T_129, UInt<1>("h01")) @[alu.scala 117:32]
                                            node _T_145 = tail(_T_144, 1) @[alu.scala 117:32]
                                            node _T_146 = sub(UInt<1>("h00"), _T_145) @[alu.scala 117:23]
                                            node _T_147 = tail(_T_146, 1) @[alu.scala 117:23]
                                            io.result <= _T_147 @[alu.scala 117:19]
                                            skip @[alu.scala 116:18]
                                          skip @[alu.scala 111:16]
                                        skip @[alu.scala 106:43]
                                      else : @[alu.scala 125:43]
                                        node _T_148 = eq(io.operation, UInt<5>("h013")) @[alu.scala 125:27]
                                        when _T_148 : @[alu.scala 125:43]
                                          node _T_149 = bits(io.operand1, 63, 32) @[alu.scala 32:16]
                                          node _T_150 = bits(io.operand1, 31, 0) @[alu.scala 33:16]
                                          node _T_151 = bits(io.operand2, 63, 32) @[alu.scala 34:16]
                                          node _T_152 = bits(io.operand2, 31, 0) @[alu.scala 35:16]
                                          wire _T_153 : UInt<64> @[alu.scala 36:21]
                                          node _T_154 = mul(_T_149, _T_151) @[alu.scala 37:15]
                                          node _T_155 = mul(_T_149, _T_152) @[alu.scala 37:23]
                                          node _T_156 = shr(_T_155, 32) @[alu.scala 37:27]
                                          node _T_157 = add(_T_154, _T_156) @[alu.scala 37:18]
                                          node _T_158 = tail(_T_157, 1) @[alu.scala 37:18]
                                          node _T_159 = mul(_T_150, _T_151) @[alu.scala 37:39]
                                          node _T_160 = shr(_T_159, 32) @[alu.scala 37:43]
                                          node _T_161 = add(_T_158, _T_160) @[alu.scala 37:34]
                                          node _T_162 = tail(_T_161, 1) @[alu.scala 37:34]
                                          _T_153 <= _T_162 @[alu.scala 37:11]
                                          wire _T_163 : UInt<64> @[alu.scala 38:20]
                                          node _T_164 = mul(_T_149, _T_152) @[alu.scala 39:16]
                                          node _T_165 = shl(UInt<1>("h01"), 32) @[alu.scala 39:27]
                                          node _T_166 = rem(_T_164, _T_165) @[alu.scala 39:20]
                                          node _T_167 = mul(_T_150, _T_151) @[alu.scala 39:39]
                                          node _T_168 = shl(UInt<1>("h01"), 32) @[alu.scala 39:50]
                                          node _T_169 = rem(_T_167, _T_168) @[alu.scala 39:43]
                                          node _T_170 = add(_T_166, _T_169) @[alu.scala 39:35]
                                          node _T_171 = tail(_T_170, 1) @[alu.scala 39:35]
                                          node _T_172 = mul(_T_150, _T_152) @[alu.scala 39:62]
                                          node _T_173 = shr(_T_172, 32) @[alu.scala 39:66]
                                          node _T_174 = add(_T_171, _T_173) @[alu.scala 39:57]
                                          node _T_175 = tail(_T_174, 1) @[alu.scala 39:57]
                                          _T_163 <= _T_175 @[alu.scala 39:10]
                                          wire _T_176 : UInt<64> @[alu.scala 40:22]
                                          node _T_177 = shr(_T_163, 32) @[alu.scala 41:29]
                                          node _T_178 = add(_T_153, _T_177) @[alu.scala 41:21]
                                          node _T_179 = tail(_T_178, 1) @[alu.scala 41:21]
                                          _T_176 <= _T_179 @[alu.scala 41:12]
                                          io.result <= _T_176 @[alu.scala 126:15]
                                          skip @[alu.scala 125:43]
                                        else : @[alu.scala 132:43]
                                          node _T_180 = eq(io.operation, UInt<5>("h014")) @[alu.scala 132:27]
                                          when _T_180 : @[alu.scala 132:43]
                                            node _T_181 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 133:23]
                                            when _T_181 : @[alu.scala 133:32]
                                              node _T_182 = asUInt(asSInt(UInt<64>("h0ffffffffffffffff"))) @[alu.scala 134:33]
                                              io.result <= _T_182 @[alu.scala 134:17]
                                              skip @[alu.scala 133:32]
                                            else : @[alu.scala 136:94]
                                              node _T_183 = asSInt(io.operand1) @[alu.scala 136:29]
                                              node _T_184 = shl(asSInt(UInt<64>("h0ffffffffffffffff")), 63) @[alu.scala 136:53]
                                              node _T_185 = eq(_T_183, _T_184) @[alu.scala 136:36]
                                              node _T_186 = asSInt(io.operand2) @[alu.scala 136:76]
                                              node _T_187 = eq(_T_186, asSInt(UInt<1>("h01"))) @[alu.scala 136:83]
                                              node _T_188 = and(_T_185, _T_187) @[alu.scala 136:60]
                                              when _T_188 : @[alu.scala 136:94]
                                                io.result <= io.operand1 @[alu.scala 137:17]
                                                skip @[alu.scala 136:94]
                                              else : @[alu.scala 139:16]
                                                node _T_189 = asSInt(io.operand1) @[alu.scala 141:33]
                                                node _T_190 = asSInt(io.operand2) @[alu.scala 141:54]
                                                node _T_191 = div(_T_189, _T_190) @[alu.scala 141:40]
                                                node _T_192 = asUInt(_T_191) @[alu.scala 141:62]
                                                io.result <= _T_192 @[alu.scala 141:17]
                                                skip @[alu.scala 139:16]
                                            skip @[alu.scala 132:43]
                                          else : @[alu.scala 144:43]
                                            node _T_193 = eq(io.operation, UInt<5>("h015")) @[alu.scala 144:27]
                                            when _T_193 : @[alu.scala 144:43]
                                              node _T_194 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 145:23]
                                              when _T_194 : @[alu.scala 145:32]
                                                node _T_195 = asUInt(asSInt(UInt<64>("h0ffffffffffffffff"))) @[alu.scala 146:33]
                                                io.result <= _T_195 @[alu.scala 146:17]
                                                skip @[alu.scala 145:32]
                                              else : @[alu.scala 148:16]
                                                node _T_196 = div(io.operand1, io.operand2) @[alu.scala 149:32]
                                                io.result <= _T_196 @[alu.scala 149:17]
                                                skip @[alu.scala 148:16]
                                              skip @[alu.scala 144:43]
                                            else : @[alu.scala 152:43]
                                              node _T_197 = eq(io.operation, UInt<5>("h016")) @[alu.scala 152:27]
                                              when _T_197 : @[alu.scala 152:43]
                                                node _T_198 = eq(operand2_32, UInt<1>("h00")) @[alu.scala 153:23]
                                                when _T_198 : @[alu.scala 153:32]
                                                  node _T_199 = asUInt(asSInt(UInt<64>("h0ffffffffffffffff"))) @[alu.scala 154:33]
                                                  io.result <= _T_199 @[alu.scala 154:17]
                                                  skip @[alu.scala 153:32]
                                                else : @[alu.scala 156:96]
                                                  node _T_200 = asSInt(operand1_32) @[alu.scala 156:29]
                                                  node _T_201 = shl(asSInt(UInt<32>("h0ffffffff")), 31) @[alu.scala 156:54]
                                                  node _T_202 = eq(_T_200, _T_201) @[alu.scala 156:36]
                                                  node _T_203 = asSInt(operand2_32) @[alu.scala 156:78]
                                                  node _T_204 = eq(_T_203, asSInt(UInt<1>("h01"))) @[alu.scala 156:85]
                                                  node _T_205 = and(_T_202, _T_204) @[alu.scala 156:62]
                                                  when _T_205 : @[alu.scala 156:96]
                                                    node _T_206 = bits(operand1_32, 31, 31) @[alu.scala 46:61]
                                                    node _T_207 = bits(_T_206, 0, 0) @[Bitwise.scala 72:15]
                                                    node _T_208 = mux(_T_207, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                    node _T_209 = bits(operand1_32, 31, 0) @[alu.scala 46:73]
                                                    node _T_210 = cat(_T_208, _T_209) @[Cat.scala 30:58]
                                                    io.result <= _T_210 @[alu.scala 157:17]
                                                    skip @[alu.scala 156:96]
                                                  else : @[alu.scala 159:16]
                                                    node _T_211 = asSInt(operand1_32) @[alu.scala 160:50]
                                                    node _T_212 = asSInt(operand2_32) @[alu.scala 160:71]
                                                    node _T_213 = div(_T_211, _T_212) @[alu.scala 160:57]
                                                    node _T_214 = asUInt(_T_213) @[alu.scala 160:79]
                                                    node _T_215 = bits(_T_214, 31, 31) @[alu.scala 46:61]
                                                    node _T_216 = bits(_T_215, 0, 0) @[Bitwise.scala 72:15]
                                                    node _T_217 = mux(_T_216, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                    node _T_218 = bits(_T_214, 31, 0) @[alu.scala 46:73]
                                                    node _T_219 = cat(_T_217, _T_218) @[Cat.scala 30:58]
                                                    io.result <= _T_219 @[alu.scala 160:17]
                                                    skip @[alu.scala 159:16]
                                                skip @[alu.scala 152:43]
                                              else : @[alu.scala 163:43]
                                                node _T_220 = eq(io.operation, UInt<5>("h017")) @[alu.scala 163:27]
                                                when _T_220 : @[alu.scala 163:43]
                                                  node _T_221 = eq(operand2_32, UInt<1>("h00")) @[alu.scala 164:23]
                                                  when _T_221 : @[alu.scala 164:32]
                                                    node _T_222 = asUInt(asSInt(UInt<64>("h0ffffffffffffffff"))) @[alu.scala 165:33]
                                                    io.result <= _T_222 @[alu.scala 165:17]
                                                    skip @[alu.scala 164:32]
                                                  else : @[alu.scala 167:16]
                                                    node _T_223 = div(operand1_32, operand2_32) @[alu.scala 168:49]
                                                    node _T_224 = bits(_T_223, 31, 31) @[alu.scala 46:61]
                                                    node _T_225 = bits(_T_224, 0, 0) @[Bitwise.scala 72:15]
                                                    node _T_226 = mux(_T_225, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                    node _T_227 = bits(_T_223, 31, 0) @[alu.scala 46:73]
                                                    node _T_228 = cat(_T_226, _T_227) @[Cat.scala 30:58]
                                                    io.result <= _T_228 @[alu.scala 168:17]
                                                    skip @[alu.scala 167:16]
                                                  skip @[alu.scala 163:43]
                                                else : @[alu.scala 171:43]
                                                  node _T_229 = eq(io.operation, UInt<5>("h018")) @[alu.scala 171:27]
                                                  when _T_229 : @[alu.scala 171:43]
                                                    node _T_230 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 172:23]
                                                    when _T_230 : @[alu.scala 172:32]
                                                      io.result <= io.operand1 @[alu.scala 173:17]
                                                      skip @[alu.scala 172:32]
                                                    else : @[alu.scala 175:98]
                                                      node _T_231 = asSInt(io.operand1) @[alu.scala 175:29]
                                                      node _T_232 = shl(asSInt(UInt<64>("h0ffffffffffffffff")), 63) @[alu.scala 175:56]
                                                      node _T_233 = eq(_T_231, _T_232) @[alu.scala 175:36]
                                                      node _T_234 = asSInt(io.operand2) @[alu.scala 175:80]
                                                      node _T_235 = eq(_T_234, asSInt(UInt<1>("h01"))) @[alu.scala 175:87]
                                                      node _T_236 = and(_T_233, _T_235) @[alu.scala 175:64]
                                                      when _T_236 : @[alu.scala 175:98]
                                                        io.result <= UInt<1>("h00") @[alu.scala 176:17]
                                                        skip @[alu.scala 175:98]
                                                      else : @[alu.scala 178:16]
                                                        node _T_237 = asSInt(io.operand1) @[alu.scala 179:33]
                                                        node _T_238 = asSInt(io.operand2) @[alu.scala 179:54]
                                                        node _T_239 = rem(_T_237, _T_238) @[alu.scala 179:40]
                                                        node _T_240 = asUInt(_T_239) @[alu.scala 179:62]
                                                        io.result <= _T_240 @[alu.scala 179:17]
                                                        skip @[alu.scala 178:16]
                                                    skip @[alu.scala 171:43]
                                                  else : @[alu.scala 182:43]
                                                    node _T_241 = eq(io.operation, UInt<5>("h019")) @[alu.scala 182:27]
                                                    when _T_241 : @[alu.scala 182:43]
                                                      node _T_242 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 183:23]
                                                      when _T_242 : @[alu.scala 183:32]
                                                        io.result <= io.operand1 @[alu.scala 184:17]
                                                        skip @[alu.scala 183:32]
                                                      else : @[alu.scala 186:16]
                                                        node _T_243 = rem(io.operand1, io.operand2) @[alu.scala 187:32]
                                                        io.result <= _T_243 @[alu.scala 187:17]
                                                        skip @[alu.scala 186:16]
                                                      skip @[alu.scala 182:43]
                                                    else : @[alu.scala 190:43]
                                                      node _T_244 = eq(io.operation, UInt<5>("h01a")) @[alu.scala 190:27]
                                                      when _T_244 : @[alu.scala 190:43]
                                                        node _T_245 = eq(operand2_32, UInt<1>("h00")) @[alu.scala 191:23]
                                                        when _T_245 : @[alu.scala 191:32]
                                                          node _T_246 = bits(operand1_32, 31, 31) @[alu.scala 46:61]
                                                          node _T_247 = bits(_T_246, 0, 0) @[Bitwise.scala 72:15]
                                                          node _T_248 = mux(_T_247, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                          node _T_249 = bits(operand1_32, 31, 0) @[alu.scala 46:73]
                                                          node _T_250 = cat(_T_248, _T_249) @[Cat.scala 30:58]
                                                          io.result <= _T_250 @[alu.scala 192:17]
                                                          skip @[alu.scala 191:32]
                                                        else : @[alu.scala 194:98]
                                                          node _T_251 = asSInt(operand1_32) @[alu.scala 194:29]
                                                          node _T_252 = shl(asSInt(UInt<32>("h0ffffffff")), 31) @[alu.scala 194:56]
                                                          node _T_253 = eq(_T_251, _T_252) @[alu.scala 194:36]
                                                          node _T_254 = asSInt(operand2_32) @[alu.scala 194:80]
                                                          node _T_255 = eq(_T_254, asSInt(UInt<1>("h01"))) @[alu.scala 194:87]
                                                          node _T_256 = and(_T_253, _T_255) @[alu.scala 194:64]
                                                          when _T_256 : @[alu.scala 194:98]
                                                            io.result <= UInt<1>("h00") @[alu.scala 195:17]
                                                            skip @[alu.scala 194:98]
                                                          else : @[alu.scala 197:16]
                                                            node _T_257 = asSInt(operand1_32) @[alu.scala 198:50]
                                                            node _T_258 = asSInt(operand2_32) @[alu.scala 198:71]
                                                            node _T_259 = rem(_T_257, _T_258) @[alu.scala 198:57]
                                                            node _T_260 = asUInt(_T_259) @[alu.scala 198:79]
                                                            node _T_261 = bits(_T_260, 31, 31) @[alu.scala 46:61]
                                                            node _T_262 = bits(_T_261, 0, 0) @[Bitwise.scala 72:15]
                                                            node _T_263 = mux(_T_262, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                            node _T_264 = bits(_T_260, 31, 0) @[alu.scala 46:73]
                                                            node _T_265 = cat(_T_263, _T_264) @[Cat.scala 30:58]
                                                            io.result <= _T_265 @[alu.scala 198:17]
                                                            skip @[alu.scala 197:16]
                                                        skip @[alu.scala 190:43]
                                                      else : @[alu.scala 201:43]
                                                        node _T_266 = eq(io.operation, UInt<5>("h01b")) @[alu.scala 201:27]
                                                        when _T_266 : @[alu.scala 201:43]
                                                          node _T_267 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 202:23]
                                                          when _T_267 : @[alu.scala 202:32]
                                                            node _T_268 = bits(operand1_32, 31, 31) @[alu.scala 46:61]
                                                            node _T_269 = bits(_T_268, 0, 0) @[Bitwise.scala 72:15]
                                                            node _T_270 = mux(_T_269, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                            node _T_271 = bits(operand1_32, 31, 0) @[alu.scala 46:73]
                                                            node _T_272 = cat(_T_270, _T_271) @[Cat.scala 30:58]
                                                            io.result <= _T_272 @[alu.scala 203:17]
                                                            skip @[alu.scala 202:32]
                                                          else : @[alu.scala 205:16]
                                                            node _T_273 = rem(operand1_32, operand2_32) @[alu.scala 206:49]
                                                            node _T_274 = bits(_T_273, 31, 31) @[alu.scala 46:61]
                                                            node _T_275 = bits(_T_274, 0, 0) @[Bitwise.scala 72:15]
                                                            node _T_276 = mux(_T_275, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                            node _T_277 = bits(_T_273, 31, 0) @[alu.scala 46:73]
                                                            node _T_278 = cat(_T_276, _T_277) @[Cat.scala 30:58]
                                                            io.result <= _T_278 @[alu.scala 206:17]
                                                            skip @[alu.scala 205:16]
                                                          skip @[alu.scala 201:43]
                                                        else : @[alu.scala 209:43]
                                                          node _T_279 = eq(io.operation, UInt<5>("h01c")) @[alu.scala 209:27]
                                                          when _T_279 : @[alu.scala 209:43]
                                                            node _T_280 = eq(io.operand1, UInt<1>("h00")) @[alu.scala 211:24]
                                                            node _T_281 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 211:49]
                                                            node _T_282 = or(_T_280, _T_281) @[alu.scala 211:33]
                                                            when _T_282 : @[alu.scala 211:59]
                                                              io.result <= UInt<1>("h00") @[alu.scala 212:17]
                                                              skip @[alu.scala 211:59]
                                                            else : @[alu.scala 214:16]
                                                              node _T_283 = asSInt(io.operand1) @[alu.scala 215:45]
                                                              node _T_284 = lt(_T_283, asSInt(UInt<1>("h00"))) @[alu.scala 215:55]
                                                              node _T_285 = sub(asSInt(UInt<1>("h00")), _T_283) @[alu.scala 215:55]
                                                              node _T_286 = tail(_T_285, 1) @[alu.scala 215:55]
                                                              node _T_287 = asSInt(_T_286) @[alu.scala 215:55]
                                                              node _T_288 = mux(_T_284, _T_287, _T_283) @[alu.scala 215:55]
                                                              node _T_289 = asUInt(_T_288) @[alu.scala 215:58]
                                                              node _T_290 = bits(_T_289, 63, 32) @[alu.scala 32:16]
                                                              node _T_291 = bits(_T_289, 31, 0) @[alu.scala 33:16]
                                                              node _T_292 = bits(io.operand2, 63, 32) @[alu.scala 34:16]
                                                              node _T_293 = bits(io.operand2, 31, 0) @[alu.scala 35:16]
                                                              wire _T_294 : UInt<64> @[alu.scala 36:21]
                                                              node _T_295 = mul(_T_290, _T_292) @[alu.scala 37:15]
                                                              node _T_296 = mul(_T_290, _T_293) @[alu.scala 37:23]
                                                              node _T_297 = shr(_T_296, 32) @[alu.scala 37:27]
                                                              node _T_298 = add(_T_295, _T_297) @[alu.scala 37:18]
                                                              node _T_299 = tail(_T_298, 1) @[alu.scala 37:18]
                                                              node _T_300 = mul(_T_291, _T_292) @[alu.scala 37:39]
                                                              node _T_301 = shr(_T_300, 32) @[alu.scala 37:43]
                                                              node _T_302 = add(_T_299, _T_301) @[alu.scala 37:34]
                                                              node _T_303 = tail(_T_302, 1) @[alu.scala 37:34]
                                                              _T_294 <= _T_303 @[alu.scala 37:11]
                                                              wire _T_304 : UInt<64> @[alu.scala 38:20]
                                                              node _T_305 = mul(_T_290, _T_293) @[alu.scala 39:16]
                                                              node _T_306 = shl(UInt<1>("h01"), 32) @[alu.scala 39:27]
                                                              node _T_307 = rem(_T_305, _T_306) @[alu.scala 39:20]
                                                              node _T_308 = mul(_T_291, _T_292) @[alu.scala 39:39]
                                                              node _T_309 = shl(UInt<1>("h01"), 32) @[alu.scala 39:50]
                                                              node _T_310 = rem(_T_308, _T_309) @[alu.scala 39:43]
                                                              node _T_311 = add(_T_307, _T_310) @[alu.scala 39:35]
                                                              node _T_312 = tail(_T_311, 1) @[alu.scala 39:35]
                                                              node _T_313 = mul(_T_291, _T_293) @[alu.scala 39:62]
                                                              node _T_314 = shr(_T_313, 32) @[alu.scala 39:66]
                                                              node _T_315 = add(_T_312, _T_314) @[alu.scala 39:57]
                                                              node _T_316 = tail(_T_315, 1) @[alu.scala 39:57]
                                                              _T_304 <= _T_316 @[alu.scala 39:10]
                                                              wire _T_317 : UInt<64> @[alu.scala 40:22]
                                                              node _T_318 = shr(_T_304, 32) @[alu.scala 41:29]
                                                              node _T_319 = add(_T_294, _T_318) @[alu.scala 41:21]
                                                              node _T_320 = tail(_T_319, 1) @[alu.scala 41:21]
                                                              _T_317 <= _T_320 @[alu.scala 41:12]
                                                              node _T_321 = asSInt(io.operand1) @[alu.scala 216:25]
                                                              node _T_322 = geq(_T_321, asSInt(UInt<1>("h00"))) @[alu.scala 216:32]
                                                              when _T_322 : @[alu.scala 216:40]
                                                                io.result <= _T_317 @[alu.scala 217:19]
                                                                skip @[alu.scala 216:40]
                                                              else : @[alu.scala 219:18]
                                                                node _T_323 = add(_T_317, UInt<1>("h01")) @[alu.scala 220:32]
                                                                node _T_324 = tail(_T_323, 1) @[alu.scala 220:32]
                                                                node _T_325 = sub(UInt<1>("h00"), _T_324) @[alu.scala 220:23]
                                                                node _T_326 = tail(_T_325, 1) @[alu.scala 220:23]
                                                                io.result <= _T_326 @[alu.scala 220:19]
                                                                skip @[alu.scala 219:18]
                                                              skip @[alu.scala 214:16]
                                                            skip @[alu.scala 209:43]
                                                          else : @[alu.scala 228:14]
                                                            io.result <= UInt<1>("h00") @[alu.scala 229:15]
                                                            skip @[alu.scala 228:14]
    
  module ImmediateGenerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<64>, sextImm : UInt<64>}
    
    io.sextImm <= UInt<1>("h00") @[helpers.scala 42:14]
    node opcode = bits(io.instruction, 6, 0) @[helpers.scala 44:30]
    node _T = eq(UInt<6>("h037"), opcode) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = bits(io.instruction, 31, 12) @[helpers.scala 51:31]
      node _T_2 = bits(_T_1, 19, 19) @[helpers.scala 52:37]
      node _T_3 = bits(_T_2, 0, 0) @[Bitwise.scala 72:15]
      node _T_4 = mux(_T_3, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
      node _T_5 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
      node _T_6 = cat(_T_4, _T_1) @[Cat.scala 30:58]
      node _T_7 = cat(_T_6, _T_5) @[Cat.scala 30:58]
      io.sextImm <= _T_7 @[helpers.scala 52:18]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_8 = eq(UInt<5>("h017"), opcode) @[Conditional.scala 37:30]
      when _T_8 : @[Conditional.scala 39:67]
        node _T_9 = bits(io.instruction, 31, 12) @[helpers.scala 58:31]
        node _T_10 = bits(_T_9, 19, 19) @[helpers.scala 59:37]
        node _T_11 = bits(_T_10, 0, 0) @[Bitwise.scala 72:15]
        node _T_12 = mux(_T_11, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
        node _T_13 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
        node _T_14 = cat(_T_12, _T_9) @[Cat.scala 30:58]
        node _T_15 = cat(_T_14, _T_13) @[Cat.scala 30:58]
        io.sextImm <= _T_15 @[helpers.scala 59:18]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_16 = eq(UInt<7>("h06f"), opcode) @[Conditional.scala 37:30]
        when _T_16 : @[Conditional.scala 39:67]
          node _T_17 = bits(io.instruction, 31, 31) @[helpers.scala 64:35]
          node _T_18 = bits(io.instruction, 19, 12) @[helpers.scala 64:55]
          node _T_19 = bits(io.instruction, 20, 20) @[helpers.scala 65:35]
          node _T_20 = bits(io.instruction, 30, 21) @[helpers.scala 65:55]
          node _T_21 = cat(_T_19, _T_20) @[Cat.scala 30:58]
          node _T_22 = cat(_T_17, _T_18) @[Cat.scala 30:58]
          node _T_23 = cat(_T_22, _T_21) @[Cat.scala 30:58]
          node _T_24 = bits(_T_23, 19, 19) @[helpers.scala 66:37]
          node _T_25 = bits(_T_24, 0, 0) @[Bitwise.scala 72:15]
          node _T_26 = mux(_T_25, UInt<43>("h07ffffffffff"), UInt<43>("h00")) @[Bitwise.scala 72:12]
          node _T_27 = cat(_T_26, _T_23) @[Cat.scala 30:58]
          node _T_28 = cat(_T_27, UInt<1>("h00")) @[Cat.scala 30:58]
          io.sextImm <= _T_28 @[helpers.scala 66:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_29 = eq(UInt<7>("h067"), opcode) @[Conditional.scala 37:30]
          when _T_29 : @[Conditional.scala 39:67]
            node _T_30 = bits(io.instruction, 31, 20) @[helpers.scala 69:31]
            node _T_31 = bits(_T_30, 11, 11) @[helpers.scala 70:36]
            node _T_32 = bits(_T_31, 0, 0) @[Bitwise.scala 72:15]
            node _T_33 = mux(_T_32, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
            node _T_34 = cat(_T_33, _T_30) @[Cat.scala 30:58]
            io.sextImm <= _T_34 @[helpers.scala 70:18]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_35 = eq(UInt<7>("h063"), opcode) @[Conditional.scala 37:30]
            when _T_35 : @[Conditional.scala 39:67]
              node _T_36 = bits(io.instruction, 31, 31) @[helpers.scala 73:35]
              node _T_37 = bits(io.instruction, 7, 7) @[helpers.scala 73:55]
              node _T_38 = bits(io.instruction, 30, 25) @[helpers.scala 74:35]
              node _T_39 = bits(io.instruction, 11, 8) @[helpers.scala 74:58]
              node _T_40 = cat(_T_38, _T_39) @[Cat.scala 30:58]
              node _T_41 = cat(_T_36, _T_37) @[Cat.scala 30:58]
              node _T_42 = cat(_T_41, _T_40) @[Cat.scala 30:58]
              node _T_43 = bits(_T_42, 11, 11) @[helpers.scala 75:37]
              node _T_44 = bits(_T_43, 0, 0) @[Bitwise.scala 72:15]
              node _T_45 = mux(_T_44, UInt<51>("h07ffffffffffff"), UInt<51>("h00")) @[Bitwise.scala 72:12]
              node _T_46 = cat(_T_45, _T_42) @[Cat.scala 30:58]
              node _T_47 = cat(_T_46, UInt<1>("h00")) @[Cat.scala 30:58]
              io.sextImm <= _T_47 @[helpers.scala 75:18]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_48 = eq(UInt<2>("h03"), opcode) @[Conditional.scala 37:30]
              when _T_48 : @[Conditional.scala 39:67]
                node _T_49 = bits(io.instruction, 31, 20) @[helpers.scala 78:31]
                node _T_50 = bits(_T_49, 11, 11) @[helpers.scala 79:37]
                node _T_51 = bits(_T_50, 0, 0) @[Bitwise.scala 72:15]
                node _T_52 = mux(_T_51, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
                node _T_53 = cat(_T_52, _T_49) @[Cat.scala 30:58]
                io.sextImm <= _T_53 @[helpers.scala 79:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_54 = eq(UInt<6>("h023"), opcode) @[Conditional.scala 37:30]
                when _T_54 : @[Conditional.scala 39:67]
                  node _T_55 = bits(io.instruction, 31, 25) @[helpers.scala 82:35]
                  node _T_56 = bits(io.instruction, 11, 7) @[helpers.scala 82:59]
                  node _T_57 = cat(_T_55, _T_56) @[Cat.scala 30:58]
                  node _T_58 = bits(_T_57, 11, 11) @[helpers.scala 83:37]
                  node _T_59 = bits(_T_58, 0, 0) @[Bitwise.scala 72:15]
                  node _T_60 = mux(_T_59, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
                  node _T_61 = cat(_T_60, _T_57) @[Cat.scala 30:58]
                  io.sextImm <= _T_61 @[helpers.scala 83:18]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_62 = eq(UInt<5>("h013"), opcode) @[Conditional.scala 37:30]
                  when _T_62 : @[Conditional.scala 39:67]
                    node _T_63 = bits(io.instruction, 31, 20) @[helpers.scala 86:31]
                    node _T_64 = bits(_T_63, 11, 11) @[helpers.scala 87:36]
                    node _T_65 = bits(_T_64, 0, 0) @[Bitwise.scala 72:15]
                    node _T_66 = mux(_T_65, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
                    node _T_67 = cat(_T_66, _T_63) @[Cat.scala 30:58]
                    io.sextImm <= _T_67 @[helpers.scala 87:18]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_68 = eq(UInt<5>("h01b"), opcode) @[Conditional.scala 37:30]
                    when _T_68 : @[Conditional.scala 39:67]
                      node _T_69 = bits(io.instruction, 31, 20) @[helpers.scala 90:31]
                      node _T_70 = bits(_T_69, 11, 11) @[helpers.scala 91:36]
                      node _T_71 = bits(_T_70, 0, 0) @[Bitwise.scala 72:15]
                      node _T_72 = mux(_T_71, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
                      node _T_73 = cat(_T_72, _T_69) @[Cat.scala 30:58]
                      io.sextImm <= _T_73 @[helpers.scala 91:18]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_74 = eq(UInt<7>("h073"), opcode) @[Conditional.scala 37:30]
                      when _T_74 : @[Conditional.scala 39:67]
                        node _T_75 = mux(UInt<1>("h00"), UInt<59>("h07ffffffffffffff"), UInt<59>("h00")) @[Bitwise.scala 72:12]
                        node _T_76 = bits(io.instruction, 19, 15) @[helpers.scala 94:53]
                        node _T_77 = cat(_T_75, _T_76) @[Cat.scala 30:58]
                        io.sextImm <= _T_77 @[helpers.scala 94:18]
                        skip @[Conditional.scala 39:67]
    
  module ControlTransferUnit : 
    input clock : Clock
    input reset : Reset
    output io : {flip controltransferop : UInt<2>, flip operand1 : UInt<64>, flip operand2 : UInt<64>, flip funct3 : UInt<3>, flip pc : UInt<64>, flip imm : UInt<64>, nextpc : UInt<64>, taken : UInt<1>}
    
    node _T = add(io.pc, UInt<3>("h04")) @[controltransferunit.scala 40:22]
    node _T_1 = tail(_T, 1) @[controltransferunit.scala 40:22]
    io.nextpc <= _T_1 @[controltransferunit.scala 40:13]
    io.taken <= UInt<1>("h00") @[controltransferunit.scala 41:12]
    
  module SingleCycleCPU : 
    input clock : Clock
    input reset : Reset
    output io : {flip imem : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<64>, ready : UInt<1>}, flip dmem : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<64>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<64>}}
    
    reg pc : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[cpu.scala 17:42]
    inst control of Control @[cpu.scala 18:31]
    control.clock <= clock
    control.reset <= reset
    inst registers of RegisterFile @[cpu.scala 19:31]
    registers.clock <= clock
    registers.reset <= reset
    inst aluControl of ALUControl @[cpu.scala 20:31]
    aluControl.clock <= clock
    aluControl.reset <= reset
    inst alu of ALU @[cpu.scala 21:31]
    alu.clock <= clock
    alu.reset <= reset
    inst immGen of ImmediateGenerator @[cpu.scala 22:31]
    immGen.clock <= clock
    immGen.reset <= reset
    inst controlTransfer of ControlTransferUnit @[cpu.scala 23:31]
    controlTransfer.clock <= clock
    controlTransfer.reset <= reset
    reg value : UInt<30>, clock with : (reset => (reset, UInt<30>("h00"))) @[Counter.scala 29:33]
    wire _T : UInt<1>
    _T <= UInt<1>("h00")
    when UInt<1>("h01") : @[Counter.scala 67:17]
      node _T_1 = eq(value, UInt<30>("h03fffffff")) @[Counter.scala 38:24]
      node _T_2 = add(value, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_3 = tail(_T_2, 1) @[Counter.scala 39:22]
      value <= _T_3 @[Counter.scala 39:13]
      _T <= _T_1 @[Counter.scala 67:24]
      skip @[Counter.scala 67:17]
    immGen.io.sextImm is invalid @[cpu.scala 26:13]
    immGen.io.instruction is invalid @[cpu.scala 26:13]
    controlTransfer.io.taken is invalid @[cpu.scala 27:22]
    controlTransfer.io.nextpc is invalid @[cpu.scala 27:22]
    controlTransfer.io.imm is invalid @[cpu.scala 27:22]
    controlTransfer.io.pc is invalid @[cpu.scala 27:22]
    controlTransfer.io.funct3 is invalid @[cpu.scala 27:22]
    controlTransfer.io.operand2 is invalid @[cpu.scala 27:22]
    controlTransfer.io.operand1 is invalid @[cpu.scala 27:22]
    controlTransfer.io.controltransferop is invalid @[cpu.scala 27:22]
    io.dmem.readdata is invalid @[cpu.scala 28:11]
    io.dmem.sext is invalid @[cpu.scala 28:11]
    io.dmem.maskmode is invalid @[cpu.scala 28:11]
    io.dmem.memwrite is invalid @[cpu.scala 28:11]
    io.dmem.memread is invalid @[cpu.scala 28:11]
    io.dmem.writedata is invalid @[cpu.scala 28:11]
    io.dmem.good is invalid @[cpu.scala 28:11]
    io.dmem.valid is invalid @[cpu.scala 28:11]
    io.dmem.address is invalid @[cpu.scala 28:11]
    io.imem.address <= pc @[cpu.scala 31:19]
    io.imem.valid <= UInt<1>("h01") @[cpu.scala 32:17]
    wire instruction : UInt<32> @[cpu.scala 34:25]
    node _T_4 = rem(pc, UInt<4>("h08")) @[cpu.scala 35:13]
    node _T_5 = eq(_T_4, UInt<3>("h04")) @[cpu.scala 35:20]
    when _T_5 : @[cpu.scala 35:29]
      node _T_6 = bits(io.imem.instruction, 63, 32) @[cpu.scala 36:39]
      instruction <= _T_6 @[cpu.scala 36:17]
      skip @[cpu.scala 35:29]
    else : @[cpu.scala 37:16]
      node _T_7 = bits(io.imem.instruction, 31, 0) @[cpu.scala 38:39]
      instruction <= _T_7 @[cpu.scala 38:17]
      skip @[cpu.scala 37:16]
    node _T_8 = bits(instruction, 6, 0) @[cpu.scala 41:35]
    control.io.opcode <= _T_8 @[cpu.scala 41:21]
    node _T_9 = bits(instruction, 19, 15) @[cpu.scala 43:39]
    registers.io.readreg1 <= _T_9 @[cpu.scala 43:25]
    node _T_10 = bits(instruction, 24, 20) @[cpu.scala 44:39]
    registers.io.readreg2 <= _T_10 @[cpu.scala 44:25]
    node _T_11 = bits(instruction, 11, 7) @[cpu.scala 45:39]
    registers.io.writereg <= _T_11 @[cpu.scala 45:25]
    registers.io.writedata <= alu.io.result @[cpu.scala 46:26]
    node _T_12 = neq(registers.io.writereg, UInt<1>("h00")) @[cpu.scala 47:46]
    node _T_13 = eq(control.io.writeback_valid, UInt<1>("h01")) @[cpu.scala 47:85]
    node _T_14 = and(_T_12, _T_13) @[cpu.scala 47:55]
    registers.io.wen <= _T_14 @[cpu.scala 47:20]
    aluControl.io.aluop <= control.io.aluop @[cpu.scala 49:24]
    node _T_15 = bits(instruction, 31, 25) @[cpu.scala 50:38]
    aluControl.io.funct7 <= _T_15 @[cpu.scala 50:24]
    node _T_16 = bits(instruction, 14, 12) @[cpu.scala 51:38]
    aluControl.io.funct3 <= _T_16 @[cpu.scala 51:24]
    alu.io.operation <= aluControl.io.operation @[cpu.scala 53:20]
    alu.io.operand1 <= registers.io.readdata1 @[cpu.scala 54:19]
    alu.io.operand2 <= registers.io.readdata2 @[cpu.scala 55:19]
    node _T_17 = add(pc, UInt<3>("h04")) @[cpu.scala 57:12]
    node _T_18 = tail(_T_17, 1) @[cpu.scala 57:12]
    pc <= _T_18 @[cpu.scala 57:6]
    
  module DualPortedCombinMemory : 
    input clock : Clock
    input reset : Reset
    output io : {imem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<64>}}}, dmem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<64>}}}}
    
    io.imem.request.bits.operation is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.writedata is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.address is invalid @[base-memory-components.scala 32:19]
    io.imem.request.valid is invalid @[base-memory-components.scala 32:19]
    io.imem.request.ready is invalid @[base-memory-components.scala 32:19]
    io.dmem.request.bits.operation is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.writedata is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.address is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.valid is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.ready is invalid @[base-memory-components.scala 33:19]
    wire _T : {valid : UInt<1>, bits : {data : UInt<64>}} @[base-memory-components.scala 36:35]
    _T.bits.data <= UInt<64>("h00") @[base-memory-components.scala 36:35]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 36:35]
    io.imem.response.bits.data <= _T.bits.data @[base-memory-components.scala 36:20]
    io.imem.response.valid <= _T.valid @[base-memory-components.scala 36:20]
    wire _T_1 : {valid : UInt<1>, bits : {data : UInt<64>}} @[base-memory-components.scala 37:35]
    _T_1.bits.data <= UInt<64>("h00") @[base-memory-components.scala 37:35]
    _T_1.valid <= UInt<1>("h00") @[base-memory-components.scala 37:35]
    io.dmem.response.bits.data <= _T_1.bits.data @[base-memory-components.scala 37:20]
    io.dmem.response.valid <= _T_1.valid @[base-memory-components.scala 37:20]
    cmem memory : UInt<32>[16384] @[base-memory-components.scala 39:19]
    io.imem.response.valid <= UInt<1>("h00") @[memory.scala 18:27]
    io.imem.request.ready <= UInt<1>("h01") @[memory.scala 20:26]
    when io.imem.request.valid : @[memory.scala 27:32]
      node _T_2 = eq(io.imem.request.bits.operation, UInt<1>("h00")) @[memory.scala 32:30]
      node _T_3 = asUInt(reset) @[memory.scala 32:11]
      node _T_4 = or(_T_2, _T_3) @[memory.scala 32:11]
      node _T_5 = eq(_T_4, UInt<1>("h00")) @[memory.scala 32:11]
      when _T_5 : @[memory.scala 32:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:32 assert(request.operation === Read)\n") @[memory.scala 32:11]
        stop(clock, UInt<1>(1), 1) @[memory.scala 32:11]
        skip @[memory.scala 32:11]
      node _T_6 = lt(io.imem.request.bits.address, UInt<17>("h010000")) @[memory.scala 37:27]
      when _T_6 : @[memory.scala 37:37]
        io.imem.response.valid <= UInt<1>("h01") @[memory.scala 38:30]
        node _T_7 = dshr(io.imem.request.bits.address, UInt<2>("h03")) @[memory.scala 39:42]
        node _T_8 = dshl(_T_7, UInt<1>("h01")) @[memory.scala 39:50]
        node _T_9 = add(_T_8, UInt<1>("h01")) @[memory.scala 40:60]
        node _T_10 = tail(_T_9, 1) @[memory.scala 40:60]
        node _T_11 = bits(_T_10, 13, 0) @[memory.scala 40:47]
        infer mport _T_12 = memory[_T_11], clock @[memory.scala 40:47]
        node _T_13 = bits(_T_8, 13, 0) @[memory.scala 40:74]
        infer mport _T_14 = memory[_T_13], clock @[memory.scala 40:74]
        node _T_15 = cat(_T_12, _T_14) @[Cat.scala 30:58]
        io.imem.response.bits.data <= _T_15 @[memory.scala 40:34]
        skip @[memory.scala 37:37]
      else : @[memory.scala 41:18]
        io.imem.response.valid <= UInt<1>("h00") @[memory.scala 42:30]
        skip @[memory.scala 41:18]
      skip @[memory.scala 27:32]
    else : @[memory.scala 44:16]
      io.imem.response.valid <= UInt<1>("h00") @[memory.scala 45:28]
      skip @[memory.scala 44:16]
    io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 18:27]
    io.dmem.request.ready <= UInt<1>("h01") @[memory.scala 20:26]
    when io.dmem.request.valid : @[memory.scala 55:32]
      node _T_16 = neq(io.dmem.request.bits.operation, UInt<1>("h01")) @[memory.scala 59:31]
      node _T_17 = asUInt(reset) @[memory.scala 59:12]
      node _T_18 = or(_T_16, _T_17) @[memory.scala 59:12]
      node _T_19 = eq(_T_18, UInt<1>("h00")) @[memory.scala 59:12]
      when _T_19 : @[memory.scala 59:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:59 assert (request.operation =/= Write)\n") @[memory.scala 59:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 59:12]
        skip @[memory.scala 59:12]
      node _T_20 = lt(io.dmem.request.bits.address, UInt<17>("h010000")) @[memory.scala 61:29]
      node _T_21 = asUInt(reset) @[memory.scala 61:12]
      node _T_22 = or(_T_20, _T_21) @[memory.scala 61:12]
      node _T_23 = eq(_T_22, UInt<1>("h00")) @[memory.scala 61:12]
      when _T_23 : @[memory.scala 61:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:61 assert (request.address < size.U)\n") @[memory.scala 61:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 61:12]
        skip @[memory.scala 61:12]
      node _T_24 = dshr(io.dmem.request.bits.address, UInt<2>("h02")) @[memory.scala 64:34]
      node _T_25 = add(_T_24, UInt<1>("h01")) @[memory.scala 65:58]
      node _T_26 = tail(_T_25, 1) @[memory.scala 65:58]
      node _T_27 = bits(_T_26, 13, 0) @[memory.scala 65:45]
      infer mport _T_28 = memory[_T_27], clock @[memory.scala 65:45]
      node _T_29 = bits(_T_24, 13, 0) @[memory.scala 65:72]
      infer mport _T_30 = memory[_T_29], clock @[memory.scala 65:72]
      node _T_31 = cat(_T_28, _T_30) @[Cat.scala 30:58]
      io.dmem.response.bits.data <= _T_31 @[memory.scala 65:32]
      io.dmem.response.valid <= UInt<1>("h01") @[memory.scala 66:28]
      node _T_32 = eq(io.dmem.request.bits.operation, UInt<2>("h02")) @[memory.scala 69:29]
      when _T_32 : @[memory.scala 69:44]
        node _T_33 = shr(io.dmem.request.bits.address, 2) @[memory.scala 70:25]
        node _T_34 = bits(_T_33, 13, 0) @[memory.scala 70:13]
        infer mport _T_35 = memory[_T_34], clock @[memory.scala 70:13]
        node _T_36 = bits(io.dmem.request.bits.writedata, 31, 0) @[memory.scala 70:46]
        _T_35 <= _T_36 @[memory.scala 70:31]
        node _T_37 = shr(io.dmem.request.bits.address, 2) @[memory.scala 71:26]
        node _T_38 = add(_T_37, UInt<1>("h01")) @[memory.scala 71:32]
        node _T_39 = tail(_T_38, 1) @[memory.scala 71:32]
        node _T_40 = bits(_T_39, 13, 0) @[memory.scala 71:13]
        infer mport _T_41 = memory[_T_40], clock @[memory.scala 71:13]
        node _T_42 = bits(io.dmem.request.bits.writedata, 63, 32) @[memory.scala 71:54]
        _T_41 <= _T_42 @[memory.scala 71:39]
        skip @[memory.scala 69:44]
      skip @[memory.scala 55:32]
    else : @[memory.scala 73:16]
      io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 74:28]
      skip @[memory.scala 73:16]
    
  module ICombinMemPort : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<64>, ready : UInt<1>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<64>}}}}
    
    wire _T : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<64>, ready : UInt<1>} @[base-memory-components.scala 52:31]
    _T.ready <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _T.instruction <= UInt<64>("h00") @[base-memory-components.scala 52:31]
    _T.good <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _T.address <= UInt<64>("h00") @[base-memory-components.scala 52:31]
    io.pipeline.ready <= _T.ready @[base-memory-components.scala 52:15]
    io.pipeline.instruction <= _T.instruction @[base-memory-components.scala 52:15]
    io.pipeline.good <= _T.good @[base-memory-components.scala 52:15]
    _T.valid <= io.pipeline.valid @[base-memory-components.scala 52:15]
    _T.address <= io.pipeline.address @[base-memory-components.scala 52:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 57:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 57:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 57:15]
    when io.pipeline.valid : @[memory-combin-ports.scala 16:28]
      wire _T_1 : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>} @[memory-combin-ports.scala 17:23]
      _T_1.address <= io.pipeline.address @[memory-combin-ports.scala 18:23]
      _T_1.operation <= UInt<1>("h00") @[memory-combin-ports.scala 19:23]
      _T_1.writedata <= UInt<1>("h00") @[memory-combin-ports.scala 20:23]
      io.bus.request.bits.operation <= _T_1.operation @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.writedata <= _T_1.writedata @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.address <= _T_1.address @[memory-combin-ports.scala 22:26]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 23:26]
      skip @[memory-combin-ports.scala 16:28]
    else : @[memory-combin-ports.scala 24:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 25:26]
      skip @[memory-combin-ports.scala 24:16]
    io.pipeline.ready <= UInt<1>("h01") @[memory-combin-ports.scala 29:21]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 32:20]
    io.pipeline.instruction <= io.bus.response.bits.data @[memory-combin-ports.scala 33:27]
    
  module DCombinMemPort : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<64>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<64>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<64>}}}}
    
    wire _T : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<64>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<64>} @[base-memory-components.scala 69:31]
    _T.readdata <= UInt<64>("h00") @[base-memory-components.scala 69:31]
    _T.sext <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.maskmode <= UInt<2>("h00") @[base-memory-components.scala 69:31]
    _T.memwrite <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.memread <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.writedata <= UInt<64>("h00") @[base-memory-components.scala 69:31]
    _T.good <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _T.address <= UInt<64>("h00") @[base-memory-components.scala 69:31]
    io.pipeline.readdata <= _T.readdata @[base-memory-components.scala 69:15]
    _T.sext <= io.pipeline.sext @[base-memory-components.scala 69:15]
    _T.maskmode <= io.pipeline.maskmode @[base-memory-components.scala 69:15]
    _T.memwrite <= io.pipeline.memwrite @[base-memory-components.scala 69:15]
    _T.memread <= io.pipeline.memread @[base-memory-components.scala 69:15]
    _T.writedata <= io.pipeline.writedata @[base-memory-components.scala 69:15]
    io.pipeline.good <= _T.good @[base-memory-components.scala 69:15]
    _T.valid <= io.pipeline.valid @[base-memory-components.scala 69:15]
    _T.address <= io.pipeline.address @[base-memory-components.scala 69:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 74:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 74:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 74:15]
    io.pipeline.good <= io.bus.response.valid @[base-memory-components.scala 76:20]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 42:20]
    node _T_1 = or(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 44:51]
    node _T_2 = and(io.pipeline.valid, _T_1) @[memory-combin-ports.scala 44:27]
    when _T_2 : @[memory-combin-ports.scala 44:77]
      node _T_3 = and(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 46:34]
      node _T_4 = eq(_T_3, UInt<1>("h00")) @[memory-combin-ports.scala 46:12]
      node _T_5 = asUInt(reset) @[memory-combin-ports.scala 46:11]
      node _T_6 = or(_T_4, _T_5) @[memory-combin-ports.scala 46:11]
      node _T_7 = eq(_T_6, UInt<1>("h00")) @[memory-combin-ports.scala 46:11]
      when _T_7 : @[memory-combin-ports.scala 46:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory-combin-ports.scala:46 assert(!(io.pipeline.memread && io.pipeline.memwrite))\n") @[memory-combin-ports.scala 46:11]
        stop(clock, UInt<1>(1), 1) @[memory-combin-ports.scala 46:11]
        skip @[memory-combin-ports.scala 46:11]
      io.bus.request.bits.address <= io.pipeline.address @[memory-combin-ports.scala 48:33]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 49:26]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 51:33]
        io.bus.request.bits.operation <= UInt<2>("h02") @[memory-combin-ports.scala 60:37]
        skip @[memory-combin-ports.scala 51:33]
      else : @[memory-combin-ports.scala 61:18]
        io.bus.request.bits.operation <= UInt<1>("h00") @[memory-combin-ports.scala 63:37]
        skip @[memory-combin-ports.scala 61:18]
      skip @[memory-combin-ports.scala 44:77]
    else : @[memory-combin-ports.scala 65:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 67:26]
      skip @[memory-combin-ports.scala 65:16]
    when io.bus.response.valid : @[memory-combin-ports.scala 71:32]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 72:33]
        wire _T_8 : UInt<64> @[memory-combin-ports.scala 74:28]
        node _T_9 = neq(io.pipeline.maskmode, UInt<2>("h03")) @[memory-combin-ports.scala 77:34]
        when _T_9 : @[memory-combin-ports.scala 77:43]
          node _T_10 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 79:41]
          wire _T_11 : UInt<64> @[memory-combin-ports.scala 80:28]
          wire _T_12 : UInt<64> @[memory-combin-ports.scala 81:34]
          wire _T_13 : UInt<64> @[memory-combin-ports.scala 82:42]
          wire _T_14 : UInt<64> @[memory-combin-ports.scala 83:37]
          wire _T_15 : UInt<64> @[memory-combin-ports.scala 84:33]
          _T_11 <= io.bus.response.bits.data @[memory-combin-ports.scala 86:18]
          node _T_16 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 88:36]
          when _T_16 : @[memory-combin-ports.scala 88:45]
            node _T_17 = mux(UInt<1>("h00"), UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
            node _T_18 = mux(UInt<1>("h01"), UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
            node _T_19 = cat(_T_17, _T_18) @[Cat.scala 30:58]
            _T_12 <= _T_19 @[memory-combin-ports.scala 89:26]
            skip @[memory-combin-ports.scala 88:45]
          else : @[memory-combin-ports.scala 90:52]
            node _T_20 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 90:43]
            when _T_20 : @[memory-combin-ports.scala 90:52]
              node _T_21 = mux(UInt<1>("h00"), UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
              node _T_22 = mux(UInt<1>("h01"), UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
              node _T_23 = cat(_T_21, _T_22) @[Cat.scala 30:58]
              _T_12 <= _T_23 @[memory-combin-ports.scala 91:26]
              skip @[memory-combin-ports.scala 90:52]
            else : @[memory-combin-ports.scala 92:52]
              node _T_24 = eq(io.pipeline.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 92:43]
              when _T_24 : @[memory-combin-ports.scala 92:52]
                node _T_25 = mux(UInt<1>("h00"), UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                node _T_26 = mux(UInt<1>("h01"), UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                node _T_27 = cat(_T_25, _T_26) @[Cat.scala 30:58]
                _T_12 <= _T_27 @[memory-combin-ports.scala 93:26]
                skip @[memory-combin-ports.scala 92:52]
              else : @[memory-combin-ports.scala 94:22]
                node _T_28 = mux(UInt<1>("h01"), UInt<64>("h0ffffffffffffffff"), UInt<64>("h00")) @[Bitwise.scala 72:12]
                _T_12 <= _T_28 @[memory-combin-ports.scala 95:26]
                skip @[memory-combin-ports.scala 94:22]
          node _T_29 = mul(_T_10, UInt<4>("h08")) @[memory-combin-ports.scala 98:61]
          node _T_30 = dshl(_T_12, _T_29) @[memory-combin-ports.scala 98:50]
          _T_13 <= _T_30 @[memory-combin-ports.scala 98:32]
          node _T_31 = mul(_T_10, UInt<4>("h08")) @[memory-combin-ports.scala 99:63]
          node _T_32 = dshl(io.pipeline.writedata, _T_31) @[memory-combin-ports.scala 99:52]
          _T_14 <= _T_32 @[memory-combin-ports.scala 99:27]
          node _T_33 = not(_T_13) @[memory-combin-ports.scala 102:26]
          _T_15 <= _T_33 @[memory-combin-ports.scala 102:23]
          node _T_34 = and(_T_11, _T_15) @[memory-combin-ports.scala 104:32]
          node _T_35 = and(_T_14, _T_13) @[memory-combin-ports.scala 104:70]
          node _T_36 = or(_T_34, _T_35) @[memory-combin-ports.scala 104:49]
          _T_8 <= _T_36 @[memory-combin-ports.scala 104:19]
          skip @[memory-combin-ports.scala 77:43]
        else : @[memory-combin-ports.scala 105:20]
          _T_8 <= io.pipeline.writedata @[memory-combin-ports.scala 106:19]
          skip @[memory-combin-ports.scala 105:20]
        io.bus.request.bits.writedata <= _T_8 @[memory-combin-ports.scala 109:37]
        skip @[memory-combin-ports.scala 72:33]
      else : @[memory-combin-ports.scala 110:39]
        when io.pipeline.memread : @[memory-combin-ports.scala 110:39]
          wire _T_37 : UInt<64> @[memory-combin-ports.scala 112:36]
          wire _T_38 : UInt<64> @[memory-combin-ports.scala 113:36]
          node _T_39 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 115:39]
          node _T_40 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 116:34]
          when _T_40 : @[memory-combin-ports.scala 116:43]
            node _T_41 = mul(_T_39, UInt<4>("h08")) @[memory-combin-ports.scala 118:64]
            node _T_42 = dshr(io.bus.response.bits.data, _T_41) @[memory-combin-ports.scala 118:53]
            node _T_43 = and(_T_42, UInt<8>("h0ff")) @[memory-combin-ports.scala 118:72]
            _T_37 <= _T_43 @[memory-combin-ports.scala 118:23]
            skip @[memory-combin-ports.scala 116:43]
          else : @[memory-combin-ports.scala 119:50]
            node _T_44 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 119:41]
            when _T_44 : @[memory-combin-ports.scala 119:50]
              node _T_45 = mul(_T_39, UInt<4>("h08")) @[memory-combin-ports.scala 121:64]
              node _T_46 = dshr(io.bus.response.bits.data, _T_45) @[memory-combin-ports.scala 121:53]
              node _T_47 = and(_T_46, UInt<16>("h0ffff")) @[memory-combin-ports.scala 121:72]
              _T_37 <= _T_47 @[memory-combin-ports.scala 121:23]
              skip @[memory-combin-ports.scala 119:50]
            else : @[memory-combin-ports.scala 122:50]
              node _T_48 = eq(io.pipeline.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 122:41]
              when _T_48 : @[memory-combin-ports.scala 122:50]
                node _T_49 = mul(_T_39, UInt<4>("h08")) @[memory-combin-ports.scala 124:64]
                node _T_50 = dshr(io.bus.response.bits.data, _T_49) @[memory-combin-ports.scala 124:53]
                node _T_51 = and(_T_50, UInt<32>("h0ffffffff")) @[memory-combin-ports.scala 124:72]
                _T_37 <= _T_51 @[memory-combin-ports.scala 124:23]
                skip @[memory-combin-ports.scala 122:50]
              else : @[memory-combin-ports.scala 125:20]
                _T_37 <= io.bus.response.bits.data @[memory-combin-ports.scala 127:23]
                skip @[memory-combin-ports.scala 125:20]
          when io.pipeline.sext : @[memory-combin-ports.scala 130:31]
            node _T_52 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 131:36]
            when _T_52 : @[memory-combin-ports.scala 131:45]
              node _T_53 = bits(_T_37, 7, 7) @[memory-combin-ports.scala 133:59]
              node _T_54 = bits(_T_53, 0, 0) @[Bitwise.scala 72:15]
              node _T_55 = mux(_T_54, UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
              node _T_56 = bits(_T_37, 7, 0) @[memory-combin-ports.scala 133:79]
              node _T_57 = cat(_T_55, _T_56) @[Cat.scala 30:58]
              _T_38 <= _T_57 @[memory-combin-ports.scala 133:30]
              skip @[memory-combin-ports.scala 131:45]
            else : @[memory-combin-ports.scala 134:52]
              node _T_58 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 134:43]
              when _T_58 : @[memory-combin-ports.scala 134:52]
                node _T_59 = bits(_T_37, 15, 15) @[memory-combin-ports.scala 136:59]
                node _T_60 = bits(_T_59, 0, 0) @[Bitwise.scala 72:15]
                node _T_61 = mux(_T_60, UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
                node _T_62 = bits(_T_37, 15, 0) @[memory-combin-ports.scala 136:79]
                node _T_63 = cat(_T_61, _T_62) @[Cat.scala 30:58]
                _T_38 <= _T_63 @[memory-combin-ports.scala 136:30]
                skip @[memory-combin-ports.scala 134:52]
              else : @[memory-combin-ports.scala 137:52]
                node _T_64 = eq(io.pipeline.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 137:43]
                when _T_64 : @[memory-combin-ports.scala 137:52]
                  node _T_65 = bits(_T_37, 31, 31) @[memory-combin-ports.scala 139:59]
                  node _T_66 = bits(_T_65, 0, 0) @[Bitwise.scala 72:15]
                  node _T_67 = mux(_T_66, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                  node _T_68 = bits(_T_37, 31, 0) @[memory-combin-ports.scala 139:79]
                  node _T_69 = cat(_T_67, _T_68) @[Cat.scala 30:58]
                  _T_38 <= _T_69 @[memory-combin-ports.scala 139:30]
                  skip @[memory-combin-ports.scala 137:52]
                else : @[memory-combin-ports.scala 140:22]
                  _T_38 <= _T_37 @[memory-combin-ports.scala 142:30]
                  skip @[memory-combin-ports.scala 140:22]
            skip @[memory-combin-ports.scala 130:31]
          else : @[memory-combin-ports.scala 144:20]
            _T_38 <= _T_37 @[memory-combin-ports.scala 145:28]
            skip @[memory-combin-ports.scala 144:20]
          io.pipeline.readdata <= _T_38 @[memory-combin-ports.scala 148:28]
          skip @[memory-combin-ports.scala 110:39]
      skip @[memory-combin-ports.scala 71:32]
    
  module Top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {success : UInt<1>}
    
    io.success is invalid @[top.scala 12:14]
    inst cpu of SingleCycleCPU @[top.scala 14:20]
    cpu.clock <= clock
    cpu.reset <= reset
    inst mem of DualPortedCombinMemory @[top.scala 15:20]
    mem.clock <= clock
    mem.reset <= reset
    inst imem of ICombinMemPort @[top.scala 17:20]
    imem.clock <= clock
    imem.reset <= reset
    inst dmem of DCombinMemPort @[top.scala 18:20]
    dmem.clock <= clock
    dmem.reset <= reset
    mem.io.imem.request.bits.operation <= imem.io.bus.request.bits.operation @[base-memory-components.scala 16:26]
    mem.io.imem.request.bits.writedata <= imem.io.bus.request.bits.writedata @[base-memory-components.scala 16:26]
    mem.io.imem.request.bits.address <= imem.io.bus.request.bits.address @[base-memory-components.scala 16:26]
    mem.io.imem.request.valid <= imem.io.bus.request.valid @[base-memory-components.scala 16:26]
    imem.io.bus.request.ready <= mem.io.imem.request.ready @[base-memory-components.scala 16:26]
    imem.io.bus.response.bits.data <= mem.io.imem.response.bits.data @[base-memory-components.scala 17:26]
    imem.io.bus.response.valid <= mem.io.imem.response.valid @[base-memory-components.scala 17:26]
    mem.io.dmem.request.bits.operation <= dmem.io.bus.request.bits.operation @[base-memory-components.scala 19:26]
    mem.io.dmem.request.bits.writedata <= dmem.io.bus.request.bits.writedata @[base-memory-components.scala 19:26]
    mem.io.dmem.request.bits.address <= dmem.io.bus.request.bits.address @[base-memory-components.scala 19:26]
    mem.io.dmem.request.valid <= dmem.io.bus.request.valid @[base-memory-components.scala 19:26]
    dmem.io.bus.request.ready <= mem.io.dmem.request.ready @[base-memory-components.scala 19:26]
    dmem.io.bus.response.bits.data <= mem.io.dmem.response.bits.data @[base-memory-components.scala 20:26]
    dmem.io.bus.response.valid <= mem.io.dmem.response.valid @[base-memory-components.scala 20:26]
    cpu.io.imem.ready <= imem.io.pipeline.ready @[top.scala 23:15]
    cpu.io.imem.instruction <= imem.io.pipeline.instruction @[top.scala 23:15]
    cpu.io.imem.good <= imem.io.pipeline.good @[top.scala 23:15]
    imem.io.pipeline.valid <= cpu.io.imem.valid @[top.scala 23:15]
    imem.io.pipeline.address <= cpu.io.imem.address @[top.scala 23:15]
    cpu.io.dmem.readdata <= dmem.io.pipeline.readdata @[top.scala 24:15]
    dmem.io.pipeline.sext <= cpu.io.dmem.sext @[top.scala 24:15]
    dmem.io.pipeline.maskmode <= cpu.io.dmem.maskmode @[top.scala 24:15]
    dmem.io.pipeline.memwrite <= cpu.io.dmem.memwrite @[top.scala 24:15]
    dmem.io.pipeline.memread <= cpu.io.dmem.memread @[top.scala 24:15]
    dmem.io.pipeline.writedata <= cpu.io.dmem.writedata @[top.scala 24:15]
    cpu.io.dmem.good <= dmem.io.pipeline.good @[top.scala 24:15]
    dmem.io.pipeline.valid <= cpu.io.dmem.valid @[top.scala 24:15]
    dmem.io.pipeline.address <= cpu.io.dmem.address @[top.scala 24:15]
    
